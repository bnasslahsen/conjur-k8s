apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_DB_NAME_POSTGRESQL
  labels:
    app: $APP_DB_NAME_POSTGRESQL
  namespace: $APP_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $APP_DB_NAME_POSTGRESQL
  template:
    metadata:
      labels:
        app: $APP_DB_NAME_POSTGRESQL
    spec:
      securityContext:
        fsGroup: 999
      serviceAccountName: $APP_SERVICE_ACCOUNT_NAME
      containers:
        - name: $APP_DB_NAME_POSTGRESQL
          image: postgres:13.8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: $APP_POSTGRESQL_DB
            - name: POSTGRES_PASSWORD
              value: $APP_POSTGRESQL_PASSWORD
            - name: POSTGRES_USER
              value: $APP_POSTGRESQL_USER
          volumeMounts:
            - name: backend-certs
              mountPath: "/etc/certs/"
              readOnly: true
          args: [ "-c", "ssl=on", "-c", "ssl_cert_file=/etc/certs/pg_server_crt", "-c", "ssl_key_file=/etc/certs/pg_server_key" ]
          readinessProbe:
            exec:
              command: [ "psql", "-w", "-U", $APP_POSTGRESQL_USER, "-c", "SELECT 1" ]
            initialDelaySeconds: 20
            timeoutSeconds: 2
      volumes:
        - name: backend-certs
          secret:
            secretName: quick-start-backend-certs
            defaultMode: 384
---
kind: Service
apiVersion: v1
metadata:
  name: $APP_DB_NAME_POSTGRESQL
spec:
  selector:
    app: $APP_DB_NAME_POSTGRESQL
  ports:
    - port: 5432
      targetPort: 5432