### KUBE/OCP Setup ###
#KUBECONFIG=/Users/Badr.NassLahsen/.kube/config-aks
USE_K8S_FOLLOWER=false
USE_SYNCHRONIZER=true
IS_OCP=true
CYBERARK_CONJUR_REGISTRY=registry.connect.redhat.com
INTERNAL_REGISTRY=docker.io
INTERNAL_REGISTRY_PREFIX=$INTERNAL_REGISTRY/bnasslahsen

### Conjur Setup ###
CYBERARK_CONJUR_NAMESPACE=bnl-cyberark-conjur-jwt
CYBERARK_CONJUR_ACCOUNT=devsecops
CYBERARK_CONJUR_MASTER_HOSTNAME=ip-10-0-20-225.eu-west-2.compute.internal
CYBERARK_CONJUR_MASTER_PORT=3000
CYBERARK_CONJUR_AUTHENTICATOR_ID=ocp-cluster-dev
## Valid with 12.4
#FOLLOWER_VERSION=2.0.0
## Valid with 12.9
FOLLOWER_VERSION=2.3.1-290

### Common App Setup ###
APP_NAMESPACE=bnl-demo-app-ns
APP_NAME=demo-app
APP_GROUP=bnl-ocp-apps

# Change these is optional
CYBERARK_CONJUR_AUTH_K8S_CONTAINER_NAME=configurator
CYBERARK_CONJUR_SERVICE_ACCOUNT_NAME=authn-k8s-sa-jwt
CYBERARK_CONJUR_APPLIANCE_URL=https://${CYBERARK_CONJUR_MASTER_HOSTNAME}
CYBERARK_CONJUR_SEED_FILE_URL=$CYBERARK_CONJUR_APPLIANCE_URL/configuration/$CYBERARK_CONJUR_ACCOUNT/seed/follower
CYBERARK_CONJUR_SSL_CERTIFICATE=conjur.pem
CYBERARK_CONJUR_CERT_PATH=/etc/conjur/ssl
CYBERARK_CONJUR_CERT_FILE="$CYBERARK_CONJUR_CERT_PATH/$CYBERARK_CONJUR_SSL_CERTIFICATE"
CYBERARK_CONJUR_CLUSTER_ROLE_NAME=conjur-clusterrole
CYBERARK_CONJUR_K8S_INFO="kube-info.txt"

### Follower Setup ###
FOLLOWER_BASE_PATH=ocp-apps
FOLLOWER_SERVICE_NAME=conjur-follower-jwt
FOLLOWER_SERVICE_ACCOUNT_NAME=conjur-follower-jwt
FOLLOWER_NAME=system:serviceaccount:$CYBERARK_CONJUR_NAMESPACE:$FOLLOWER_SERVICE_ACCOUNT_NAME
FOLLOWER_HOST_ID=host/$FOLLOWER_BASE_PATH/$FOLLOWER_NAME
FOLLOWER_OPERATOR_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-operator-bundle
FOLLOWER_CONFIGURATOR_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-configurator:$FOLLOWER_VERSION
FOLLOWER_CYBERARK_CONJUR_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-conjur:$FOLLOWER_VERSION
FOLLOWER_INFO_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-info:$FOLLOWER_VERSION
FOLLOWER_NGINX_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-nginx:$FOLLOWER_VERSION
FOLLOWER_POSTGRES_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-postgres:$FOLLOWER_VERSION
FOLLOWER_SYSLOG_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-syslog-ng:$FOLLOWER_VERSION
FOLLOWER_FAILOVER_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-follower-failover-rebaser:$FOLLOWER_VERSION

### Summon App Setup ###
APP_SUMMON_SIDECAR=test-app-summon-sidecar
APP_SUMMON_INIT_NOCHANGE=test-app-summon-init-nochange
APP_IMAGE_NAME_SUMMON=$INTERNAL_REGISTRY_PREFIX/conjur-summon-k8s-demo

### Java APP Setup ###
APP_IMAGE_NAME_JAVA_SDK=$INTERNAL_REGISTRY_PREFIX/conjur-spring-boot-demos
CYBERARK_CONJUR_AUTHN_API_KEY=304dwk32tzzn4rjb6cv12an6d7w134js1c3jm4tjrs7jqqy3e4qwcg
CYBERARK_CONJUR_AUTHN_LOGIN=$APP_HOST_ID
CYBERARK_CONJUR_JWT_TOKEN_PATH=/var/run/secrets/tokens/jwt

### SpringBoot App Setup ###
APP_IMAGE_NAME_SPRINGBOOT=$INTERNAL_REGISTRY_PREFIX/conjur-springboot-k8s-demo

### Secretless App Setup ###
APP_IMAGE_NAME_SECRETLESS=$INTERNAL_REGISTRY_PREFIX/conjur-secretless-k8s-demo
APP_DB_NAME_POSTGRESQL=test-db
APP_POSTGRESQL_DB=test_db
APP_POSTGRESQL_USER=test_db
APP_POSTGRESQL_PASSWORD=5b3e5f75cb3cdc725fe40318

### Secretless MySQL App Setup ###
APP_NAME_SECRETLESS_MYSQL=test-app-secretless-mysql
APP_IMAGE_NAME_SECRETLESS_MYSQL=$INTERNAL_REGISTRY_PREFIX/conjur-secretless-k8s-demo-mysql
APP_DB_NAME_MYSQL=test-db-mysql
APP_MYSQL_DB=test_db
APP_MYSQL_USER=test_db
APP_MYSQL_PASSWORD=5b3e5f75cb3cdc725fe40318
APP_MYSQL_ROOT_PASSWORD=rootPass

### Secret policies PATH ###
APP_SECRETLESS_DB_MYSQL_HOST_PATH=$APP_NAME_BASE_PATH/secrets/host-mysql
APP_SECRETLESS_DB_MYSQL_PORT_PATH=$APP_NAME_BASE_PATH/secrets/port-mysql
APP_SECRETLESS_DB_MYSQL_USERNAME_PATH=$APP_NAME_BASE_PATH/secrets/username-mysql
APP_SECRETLESS_DB_MYSQL_PASSWORD_PATH=$APP_NAME_BASE_PATH/secrets/password-mysql

### Client Images ###
SECRETLESS_BROKER_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/secretless-broker
SECRETS_PROVIDER_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/secrets-provider-for-k8s
CYBERARK_CONJUR_AUTHN_K8S_IMAGE=$CYBERARK_CONJUR_REGISTRY/cyberark/conjur-openshift-authenticator

if "$IS_OCP" ; then
    KUBE_CLI=oc
    KUBE_PLATFORM=ocp
else
    KUBE_CLI=kubectl
    KUBE_PLATFORM=k8s
fi