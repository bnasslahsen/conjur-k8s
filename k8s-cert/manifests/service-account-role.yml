---
# Source: conjur-config-cluster-prep/templates/clusterrole.yaml
# This ClusterRole defines the Kubernetes API access permissions that the Conjur
# authenticator will require in order to validate application identities.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $CYBERARK_CONJUR_CLUSTER_ROLE_NAME
  labels:
    app.kubernetes.io/name: $CYBERARK_CONJUR_CLUSTER_ROLE_NAME
    app.kubernetes.io/component: "conjur-permissions"
    app.kubernetes.io/instance: "conjur-clusterrole"
    app.kubernetes.io/part-of: "conjur-config"
    conjur.org/name: $CYBERARK_CONJUR_CLUSTER_ROLE_NAME

rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["extensions"]
    resources: [ "deployments", "replicasets"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: [ "deployments", "statefulsets", "replicasets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create", "get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: conjur-authn-rolebinding
  namespace: $CYBERARK_CONJUR_NAMESPACE
subjects:
  - kind: ServiceAccount
    name: $CYBERARK_CONJUR_SERVICE_ACCOUNT_NAME
    namespace: $CYBERARK_CONJUR_NAMESPACE
roleRef:
  kind: ClusterRole
  name: $CYBERARK_CONJUR_CLUSTER_ROLE_NAME
  apiGroup: rbac.authorization.k8s.io